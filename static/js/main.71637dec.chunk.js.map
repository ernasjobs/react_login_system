{"version":3,"sources":["components/TextBox/TextBox.js","components/Buttons/UCPButton.js","components/Login/Login.js","components/DropdownMenu/DropdownMenu.js","components/AlertDismissible/AlertDismissible.js","components/LevelTwoQualifications/LevelTwoQualifications.js","components/RadioButton/RadioButton.js","components/L3Component/L3Component.js","components/images/UCPLogo.png","components/Header/Headers.js","App.js","reportWebVitals.js","index.js"],"names":["TextBox","backgroundColor","name","title","id","size","maxLength","minLength","placeholder","type","onChange","value","clearInput","className","isMobile","htmlFor","defaultProps","UCPButton","to","buttonText","props","undefined","data-testid","onClick","initialState","username","password","usernameError","passwordError","React","Component","DropdownMenu","options","styles","label","AlertDismissible","useState","show","setShow","Alert","onClose","dismissible","Heading","Button","LevelTwoQualifications","gsceGrades","className1","className2","class","rows","cols","userType","Row","Col","primary","hidden","RadioButton","heading","subtitle","oc","items","checked","map","item","e","propTypes","PropTypes","string","oneOf","number","L3Component","Headers","src","UCPLogo","alt","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71637dec.chunk.js","sourcesContent":["import React from 'react';\r\nimport './TextBox.css'\r\nimport PropTypes from 'prop-types';\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nconst TextBox = ({backgroundColor, name, title, size, id, maxLength, minLength, placeholder, type, onChange,value,clearInput, ...props}) => {\r\n    const className = isMobile ? \"mobiletextbox\" : \"textbox\";\r\nreturn (\r\n    \r\n    <div className={`${className ? \"mobiletextbox\" : \"textbox\"}`}>\r\n        <label htmlFor={id}>{title}</label>\r\n        <input\r\n        name={name}\r\n        onChange={onChange}\r\n        placeholder={placeholder}\r\n        id= {id}\r\n        maxLength = {maxLength}\r\n        minLength = {minLength}\r\n        type={type}\r\n        value ={clearInput ? '': value}\r\n        />\r\n    </div>\r\n);\r\n};\r\n\r\nTextBox.propTypes = {\r\n    backgroundColor: PropTypes.string,\r\n        /** What background colour to use */\r\n    title: PropTypes.string,\r\n        /** Input contents */\r\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n        /** How large should the input be? */\r\n    maxLength: PropTypes.number,\r\n    //Maximum input length\r\n    minLength: PropTypes.number,\r\n    //Minimum input length\r\n    placeholder: PropTypes.string,\r\n    type: PropTypes.oneOf(['text', 'password', 'email', 'tel', 'number', 'date'])\r\n};\r\n\r\nTextBox.defaultProps = {\r\n    backgroundColor: null,\r\n    size: 'small',\r\n    maxLength: 30,\r\n    minLength: 0,\r\n    placeholder: '',\r\n    type: \"text\"\r\n};\r\n\r\n/* Example Use\r\n\r\n<TextBox \r\n    title=\"First Name\" \r\n    placeholder=\"Enter your firstname\" \r\n    minLength=\"5\" \r\n    maxLength=\"30\" \r\n    id=\"input1\" \r\n    type=\"text\" \r\n/>\r\n\r\n*/\r\n\r\nexport default TextBox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './UCPButton.css';\r\n\r\nexport const UCPButton = ({ to, className, buttonText, ...props}) => {\r\n  if(to === undefined)\r\n  {\r\n    to = \"/emptyLink\"\r\n  }   \r\n  return (\r\n          <button data-testid=\"ucpButton\"\r\n            type=\"button\"\r\n            className={className}\r\n            {...props}>\r\n            {buttonText}â€‹\r\n          </button>\r\n  );\r\n};\r\nUCPButton.propTypes = {\r\n    /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\nclassName:PropTypes.string,\r\n/**\r\n   * Optional click handler\r\n   */\r\nonClick:PropTypes.func,\r\n};\r\nUCPButton.defaultProps = {\r\n    size:'UCPDefault',\r\n    onClick:undefined\r\n};\r\nexport default UCPButton\r\n\r\n/* Example\r\n\r\n<UCPButton to=\"NAMEOFPAGE\" primary=true className=\"Large\" buttonText=\"Click Here\"/> \r\n\r\n*/\r\n\r\n\r\n","import React from 'react';\r\nimport {Row , Col} from 'react-bootstrap';\r\nimport TextBox from '../TextBox/TextBox'\r\nimport UCPButton from '../Buttons/UCPButton';\r\nimport {isMobile} from 'react-device-detect';\r\nimport './Login.css';\r\n\r\nconst initialState = {\r\n    username: \"\",\r\n    password: \"\",\r\n    usernameError: \"\",\r\n    passwordError: \"\"\r\n    \r\n    \r\n};\r\n\r\nexport default class LoginForm extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = initialState;\r\n   }\r\n    handleChangeUsername = event => {\r\n        this.setState({username: event.target.value });\r\n    };\r\n    handleChangePassword = event => {\r\n        this.setState({password: event.target.value });\r\n    };\r\n    \r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if(isValid){\r\n            console.log(this.state);\r\n            this.setState(initialState);\r\n        }\r\n    };\r\n    validateEmail(email){\r\n        const pattern = /[a-zA-Z0-9]+[.]?([a-zA-Z0-9]+)?[@][a-z]{3,9}[.][a-z]{2,5}/;\r\n        const result = pattern.test(email);\r\n        if(result===true){\r\n          this.setState({\r\n            usernameError:false,\r\n            username:email,\r\n          })\r\n          return true;\r\n        } else{\r\n          this.setState({\r\n            usernameError:true,\r\n            \r\n          })\r\n          return false;\r\n        }\r\n      };\r\n\r\n    validate = () => {\r\n        let usernameError = \"\";\r\n        let passwordError = \"\";\r\n        if(!this.validateEmail(this.state.username))\r\n        {\r\n            usernameError = \"Invalid username!\"\r\n            \r\n        }\r\n        if(!this.state.password)\r\n        {\r\n            passwordError = \"Invalid password!\"   \r\n        }\r\n        if(usernameError || passwordError)\r\n        {\r\n            this.setState({usernameError, passwordError});\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    ClearForm = () => {\r\n     this.setState(initialState);\r\n    };\r\n    render() {\r\n        const className = isMobile ? \"MobileContainerStyle\" : \"ContainerStyle\";\r\n        return(\r\n            <div className={className}>\r\n                <form>\r\n                <Row>\r\n                    <Col>\r\n                    <div className=\"UserInfo\">\r\n                        <h2>Login</h2>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n                    <Row>\r\n                        <Col>\r\n                        <div className=\"UserInfo\">\r\n                            <span>Username: </span>\r\n                            <TextBox\r\n                             type=\"text\" value={this.state.username} \r\n                             onChange={this.handleChangeUsername}  placeholder=\"Enter Your Username\"/> \r\n                        </div>\r\n                        <div className=\"InvalidInput\">\r\n                           <span>{this.state.usernameError}</span>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                        <div className=\"UserInfo\">\r\n                            <span>Password: </span>\r\n                            <TextBox type=\"password\" value={this.state.password} \r\n                             onChange={this.handleChangePassword} placeholder=\"Enter Your Password\"/> \r\n                        </div>\r\n                        <div className=\"InvalidInput\">\r\n                           <span>{this.state.passwordError}</span>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"UserInfo\">\r\n                        <UCPButton className=\"smallbutton\" buttonText=\"Submit\"\r\n                            type=\"submit\"\r\n                            onClick={this.handleSubmit}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n\r\n   ","import React from 'react'\r\nimport Select from 'react-select'\r\nimport './DropdownMenu.css';\r\nimport {isMobile} from 'react-device-detect';\r\nconst className = isMobile ? \"MobileDropdown\" : \"Dropdown\";\r\nconst DropdownMenu = ({options,placeholder,styles, ...props}) => (\r\n  \r\n  <Select className={className} options={options} placeholder={placeholder}/>\r\n)\r\n\r\nexport default DropdownMenu;\r\n\r\nDropdownMenu.defaultProps = {\r\n  \r\n    options:[\r\n      { value: 'computing', label: 'BSc (Hons) Computing and Information Systems' },\r\n      { value: 'criminoloy', label: 'BA (Hons) Crimonology'},\r\n      { value: 'digitalArts', label: 'FDA Digital Arts'}\r\n    ]\r\n};","import {Alert , Button} from 'react-bootstrap';\r\nimport {useState} from 'react';\r\nimport   './AlertDismissible.css';\r\nfunction AlertDismissible() {\r\n    const [show, setShow] = useState(true);\r\n  \r\n    if (show) {\r\n      return (\r\n        <Alert className=\"Alert\" onClose={() => setShow(false)} dismissible>\r\n          <Alert.Heading>Please request grades for the folowing GCSE / Level qualifiactions:</Alert.Heading>\r\n        </Alert>\r\n      );\r\n    }\r\n    return show? <Button onClick={() => setShow(true)}>Show Alert</Button>: <span></span>;\r\n  }\r\n\r\n  export default AlertDismissible;","import React from \"react\";\r\nimport DropdownMenu from \"../DropdownMenu/DropdownMenu\";\r\nimport \"./LevelTwoQualifications.css\";\r\nimport {Row, Col } from \"react-bootstrap\";\r\nimport UCPButton from \"../Buttons/UCPButton\";\r\nimport AlerDismissible from '../AlertDismissible/AlertDismissible';\r\nimport {isMobile} from 'react-device-detect';\r\nconst LevelTwoQualifications = (props) => {\r\n  var gsceGrades = [\r\n    { label: \"A*\", id: \"a*\", value: \"A*\" },\r\n    { label: \"A\", id: \"a\", value: \"A\" },\r\n    { label: \"B\", id: \"b\", value: \"B\" },\r\n    { label: \"C\", id: \"c\", value: \"C\" },\r\n    { label: \"D\", id: \"d\", value: \"D\" },\r\n    { label: \"E\", id: \"e\", value: \"E\" },\r\n    { label: \"F\", id: \"f\", value: \"F\" },\r\n    { label: \"G\", id: \"g\", value: \"G\" },\r\n    { label: \"N/A\", id: \"na\", value: \"N/A\" },\r\n  ];\r\n\r\n  function UserTypeSelect() {\r\n    if (props.userType === \"staff\") {\r\n      return (\r\n        <Row id=\"buttonRow\">\r\n          <Col className=\"centered-buttons\">\r\n            <UCPButton\r\n              primary=\"True\"\r\n              className=\"mediumbutton\"\r\n              buttonText=\"Go Back\"\r\n            />\r\n          </Col>\r\n          <Col className=\"centered-buttons\">\r\n            <div id=\"confirmButton\" hidden>\r\n              <UCPButton\r\n                primary=\"True\"\r\n                className=\"mediumbutton\"\r\n                buttonText=\"Confirm and Go\"\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    } else {\r\n      return (\r\n        <Row id=\"buttonRow\">\r\n          <Col className=\"centered-buttons\">\r\n            <div id=\"confirmButton\" hidden>\r\n              <UCPButton\r\n                primary=\"True\"\r\n                className=\"mediumbutton\"\r\n                buttonText=\"Apply Now\"\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col className=\"centered-buttons\">\r\n            <div id=\"confirmButton1\" hidden>\r\n              <UCPButton\r\n                primary=\"True\"\r\n                className=\"mediumbutton\"\r\n                buttonText=\"Request Call Back\"\r\n              />\r\n            </div>\r\n          </Col>\r\n\r\n          <Col className=\"centered-buttons\">\r\n            <div id=\"confirmButton2\" hidden>\r\n              <UCPButton\r\n                primary=\"True\"\r\n                className=\"mediumbutton\"\r\n                buttonText=\"Request Video Call Back\"\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n  }\r\n  const className = isMobile ? \"MobileTextArea\" : \"DesktopTextArea\";  \r\n  const className1 = isMobile ? \"mobile-form-right\" : \"form-right\";\r\n  const className2 = isMobile ? \"mobile-form-container\" : \"form-container\";\r\n  return (\r\n  \r\n    <div className={className2}>\r\n      <div className=\"form-background\">\r\n        <h3 className=\"form-title\">Applicant Qualifications & Experience</h3>\r\n        <AlerDismissible/>\r\n        <div class={className1}>\r\n          <p>GCSE English Language</p>\r\n          <DropdownMenu placeholder=\"Select Grade\" options={gsceGrades} />\r\n          <p>GCSE English Literature</p>\r\n          <DropdownMenu  placeholder=\"Select Grade\" options={gsceGrades}/>\r\n          <p>GCSE English Mathematics</p>\r\n          <DropdownMenu placeholder=\"Select Grade\" options={gsceGrades} />\r\n          <p>GCSE Science / Additional Science</p>\r\n          <DropdownMenu placeholder=\"Select Grade\" options={gsceGrades} />\r\n          <p>L2 Qualifications</p>\r\n          <textarea className = {className} name=\"l2qualificaitons\" placeholder=\"Enter level 2 qualifications\"  rows={6} cols={45}/>\r\n        </div>\r\n      </div>\r\n      <div>{UserTypeSelect()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelTwoQualifications;\r\n","import React from 'react'\r\nimport './RadioButton.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst RadioButton = ({name, options, heading, subtitle, oc,value, onChange,checked, ...props}) => {\r\n\r\n    //Iterate through options array and create an input + label for each\r\n    \r\n    var items = options.map((item) =>\r\n        <div className=\"radio-group\">\r\n            <input name={name} type=\"radio\" id={item.id}  checked={value === item.value} value={item.value} onChange={onChange} onClick={oc ? (e) => oc(item.value) : ''}/>\r\n            <label htmlFor={item.id}>{item.label}</label>\r\n        </div>\r\n    );\r\n\r\n    //Return div with heading, subtitle and then the items variable which is created in the loop above\r\n\r\n    return(\r\n        <div className=\"radio-buttons\">\r\n            <h4>{heading}</h4>\r\n            <p>{subtitle}</p>\r\n            {items}\r\n        </div>\r\n    );\r\n}\r\n\r\n//Prop Types:\r\n//Note that name and options are required, heading and subtitle are not\r\n//You must pass an array of JSON objects to instantiate an instance of radio button\r\n\r\nRadioButton.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    heading: PropTypes.string,\r\n    subtitle: PropTypes.string,\r\n    oc: PropTypes.func,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\n//Without providing a heading or subtitle, this values default to null\r\n\r\nRadioButton.defaultProps = {\r\n    heading: null,\r\n    subtitle: null,\r\n    oc: null\r\n}\r\n\r\n//Export\r\n\r\nexport default RadioButton;\r\n\r\n/* \r\n\r\nEXAMPLE USE:\r\n\r\nvar criminalOptions = [\r\n        {label: \"Yes\", id: \"crimeYes\", value: \"yes\"},\r\n        {label: \"No\", id: \"crimeNo\", value: \"no\"}\r\n    ]\r\n\r\n<RadioButton heading=\"Convictions\" options={criminalOptions} name=\"criminal\" subtitle=\"Do you have any unspent criminal convictions?\" />\r\n\r\n*/","import React from 'react';\r\nimport './L3Component.css'\r\nimport PropTypes from 'prop-types';\r\nimport TextBox from '../TextBox/TextBox'\r\nimport {isMobile} from 'react-device-detect';\r\nconst L3Component = ({ name, id, onChange,placeholder,value,clearInput, ...props }) => {\r\n    const className1 = isMobile ? \"mobilel3component\" : \"l3component\";\r\n    return (\r\n        <div className={className1}>\r\n            <p>Qualification : {\"#\"+id} </p>\r\n            <p>(E.g. A Level, BTEC, Access)</p>\r\n            <TextBox\r\n            \r\n                id={\"qualification\" +id}\r\n                placeholder={\"Enter qualification #\"+id} \r\n                value ={value} \r\n                clearInput = {clearInput}\r\n                />\r\n            <p>Subject: (E.g. Bussiness Studies)</p>\r\n            <TextBox\r\n                id={\"subject\" +id}\r\n                placeholder={\"Enter subject #\" + id }\r\n                value ={value} \r\n                clearInput = {clearInput}\r\n                />\r\n            <p>Grade Achieved</p>\r\n            <TextBox\r\n                id={\"grade\"+id}\r\n                placeholder={ \"Enter grade #\"+id}\r\n                value ={value} \r\n                clearInput = {clearInput} />\r\n            <p>Year Achieved</p>\r\n            <TextBox\r\n                id={\"year\"+id}\r\n                type=\"date\" \r\n                value ={value} \r\n                clearInput = {clearInput}\r\n                />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nTextBox.propTypes = {\r\n    backgroundColor: PropTypes.string,\r\n    /** What background colour to use */\r\n    title: PropTypes.string,\r\n    /** Input contents */\r\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n    /** How large should the input be? */\r\n    maxLength: PropTypes.number,\r\n    //Maximum input length\r\n    minLength: PropTypes.number,\r\n    //Minimum input length\r\n    placeholder: PropTypes.string,\r\n    type: PropTypes.oneOf(['text', 'password', 'email', 'tel', 'number', 'date'])\r\n};\r\n\r\nTextBox.defaultProps = {\r\n    backgroundColor: null,\r\n    size: 'small',\r\n    maxLength: 30,\r\n    minLength: 0,\r\n    placeholder: '',\r\n    type: \"text\"\r\n};\r\n\r\n/* Example Use\r\n\r\n<TextBox \r\n    title=\"First Name\" \r\n    placeholder=\"Enter your firstname\" \r\n    minLength=\"5\" \r\n    maxLength=\"30\" \r\n    id=\"input1\" \r\n    type=\"text\" \r\n/>\r\n\r\n*/\r\n\r\nexport default L3Component;\r\n","export default __webpack_public_path__ + \"static/media/UCPLogo.02274764.png\";","import React from 'react';\r\nimport UCPLogo  from '../images/UCPLogo.png';\r\nimport './Headers.css';\r\nimport {isMobile} from 'react-device-detect';\r\nexport default class Headers extends React.Component{\r\n    constructor(){\r\n        super();\r\n    }\r\n    render(){\r\n        const className = isMobile ? \"MobileUCPLogoBlue\" : \"UCPLogoBlue\";\r\n        return (\r\n            <header>   \r\n                    <img data-testid=\"ucpLogoHeader\" src={UCPLogo} className={className} alt=\"UCP official logo\" />  \r\n            </header>\r\n        )\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\nimport Login from './components/Login/Login';\nimport LevelTwoQualifications from './components/LevelTwoQualifications/LevelTwoQualifications'\nimport LevelThreeQualifications from './components/LevelThreeQualifications/LevelThreeQualifications'\n\nimport Headers from './components/Header/Headers'\nimport { Container } from 'react-bootstrap';\nfunction App() {\n  return (\n    <Container>\n      <Headers/>\n      <LevelTwoQualifications/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}