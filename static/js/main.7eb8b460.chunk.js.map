{"version":3,"sources":["components/TextBox/TextBox.js","components/Buttons/UCPButton.js","components/Login/Login.js","components/DropdownMenu/DropdownMenu.js","components/AlertDismissible/AlertDismissible.js","components/RadioButton/RadioButton.js","components/L3Component/L3Component.js","components/LevelThreeQualifications/LevelThreeQualifications.js","components/images/UCPLogo.png","components/Header/Headers.js","App.js","reportWebVitals.js","index.js"],"names":["TextBox","backgroundColor","name","key","title","id","size","maxLength","minLength","placeholder","type","clearInput","value","useState","emptyInput","setEmptyInput","input","setInput","className","isMobile","htmlFor","onChange","e","currentTarget","console","log","defaultProps","UCPButton","to","buttonText","props","undefined","data-testid","onClick","initialState","username","password","usernameError","passwordError","React","Component","DropdownMenu","options","styles","label","AlertDismissible","RadioButton","heading","subtitle","oc","items","checked","map","item","propTypes","PropTypes","string","oneOf","number","L3Component","className1","l3QualificationsOptions","LevelThreeQualifications","className2","setValue","setClearInput","counter","setCounter","event","target","Headers","src","UCPLogo","alt","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7eb8b460.chunk.js","sourcesContent":["import './TextBox.css'\r\nimport React, { useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport {isMobile} from 'react-device-detect';\r\n\r\nconst TextBox = ({backgroundColor, name,key, title, size, id, maxLength, minLength, placeholder, type,value:initialValue,clearInput, ...props}) => {\r\n    const[emptyInput, setEmptyInput] = useState(clearInput)\r\n    const [input, setInput] = useState('');\r\n    const handleChange = (e) => {\r\n        if (emptyInput) {setEmptyInput(false)}\r\n        setInput(e.currentTarget.value);\r\n        console.log(input);  \r\n    };\r\n    const clearInputField = (e) => {\r\n        setEmptyInput(!clearInput)\r\n    };\r\n    const className = isMobile ? \"mobiletextbox\" : \"textbox\";\r\nreturn (\r\n    \r\n    <div className={`${className ? \"mobiletextbox\" : \"textbox\"}`}>\r\n        <label htmlFor={id}>{title}</label>\r\n        <input\r\n        name={name}\r\n        key = {key}\r\n        placeholder={placeholder}\r\n        id= {id}\r\n        maxLength = {maxLength}\r\n        minLength = {minLength}\r\n        type={type}\r\n        value ={emptyInput ? '': input}\r\n        onChange = {handleChange}\r\n        clearInput = {clearInputField}\r\n       \r\n        />\r\n    </div>\r\n);\r\n};\r\n\r\nTextBox.propTypes = {\r\n    backgroundColor: PropTypes.string,\r\n        /** What background colour to use */\r\n    title: PropTypes.string,\r\n        /** Input contents */\r\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n        /** How large should the input be? */\r\n    maxLength: PropTypes.number,\r\n    //Maximum input length\r\n    minLength: PropTypes.number,\r\n    //Minimum input length\r\n    placeholder: PropTypes.string,\r\n    type: PropTypes.oneOf(['text', 'password', 'email', 'tel', 'number', 'date'])\r\n};\r\n\r\nTextBox.defaultProps = {\r\n    backgroundColor: null,\r\n    size: 'small',\r\n    maxLength: 30,\r\n    minLength: 0,\r\n    placeholder: '',\r\n    type: \"text\"\r\n};\r\n\r\n/* Example Use\r\n\r\n<TextBox \r\n    title=\"First Name\" \r\n    placeholder=\"Enter your firstname\" \r\n    minLength=\"5\" \r\n    maxLength=\"30\" \r\n    id=\"input1\" \r\n    type=\"text\" \r\n/>\r\n\r\n*/\r\n\r\nexport default TextBox;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './UCPButton.css';\r\n\r\nexport const UCPButton = ({ to, className, buttonText, ...props}) => {\r\n  if(to === undefined)\r\n  {\r\n    to = \"/emptyLink\"\r\n  }   \r\n  return (\r\n          <button data-testid=\"ucpButton\"\r\n            type=\"button\"\r\n            className={className}\r\n            {...props}>\r\n            {buttonText}â€‹\r\n          </button>\r\n  );\r\n};\r\nUCPButton.propTypes = {\r\n    /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\nclassName:PropTypes.string,\r\n/**\r\n   * Optional click handler\r\n   */\r\nonClick:PropTypes.func,\r\n};\r\nUCPButton.defaultProps = {\r\n    size:'UCPDefault',\r\n    onClick:undefined\r\n};\r\nexport default UCPButton\r\n\r\n/* Example\r\n\r\n<UCPButton to=\"NAMEOFPAGE\" primary=true className=\"Large\" buttonText=\"Click Here\"/> \r\n\r\n*/\r\n\r\n\r\n","import React from 'react';\r\nimport {Row , Col} from 'react-bootstrap';\r\nimport TextBox from '../TextBox/TextBox'\r\nimport UCPButton from '../Buttons/UCPButton';\r\nimport {isMobile} from 'react-device-detect';\r\nimport './Login.css';\r\n\r\nconst initialState = {\r\n    username: \"\",\r\n    password: \"\",\r\n    usernameError: \"\",\r\n    passwordError: \"\"\r\n    \r\n    \r\n};\r\n\r\nexport default class LoginForm extends React.Component {\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = initialState;\r\n   }\r\n    handleChangeUsername = event => {\r\n        this.setState({username: event.target.value });\r\n    };\r\n    handleChangePassword = event => {\r\n        this.setState({password: event.target.value });\r\n    };\r\n    \r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        const isValid = this.validate();\r\n        if(isValid){\r\n            console.log(this.state);\r\n            this.setState(initialState);\r\n        }\r\n    };\r\n    validateEmail(email){\r\n        const pattern = /[a-zA-Z0-9]+[.]?([a-zA-Z0-9]+)?[@][a-z]{3,9}[.][a-z]{2,5}/;\r\n        const result = pattern.test(email);\r\n        if(result===true){\r\n          this.setState({\r\n            usernameError:false,\r\n            username:email,\r\n          })\r\n          return true;\r\n        } else{\r\n          this.setState({\r\n            usernameError:true,\r\n            \r\n          })\r\n          return false;\r\n        }\r\n      };\r\n\r\n    validate = () => {\r\n        let usernameError = \"\";\r\n        let passwordError = \"\";\r\n        if(!this.validateEmail(this.state.username))\r\n        {\r\n            usernameError = \"Invalid username!\"\r\n            \r\n        }\r\n        if(!this.state.password)\r\n        {\r\n            passwordError = \"Invalid password!\"   \r\n        }\r\n        if(usernameError || passwordError)\r\n        {\r\n            this.setState({usernameError, passwordError});\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    ClearForm = () => {\r\n     this.setState(initialState);\r\n    };\r\n    render() {\r\n        const className = isMobile ? \"MobileContainerStyle\" : \"ContainerStyle\";\r\n        return(\r\n            <div className={className}>\r\n                <form>\r\n                <Row>\r\n                    <Col>\r\n                    <div className=\"UserInfo\">\r\n                        <h2>Login</h2>\r\n                    </div>\r\n                    </Col>\r\n                </Row>\r\n                    <Row>\r\n                        <Col>\r\n                        <div className=\"UserInfo\">\r\n                            <span>Username: </span>\r\n                            <TextBox\r\n                             type=\"text\" value={this.state.username} \r\n                             onChange={this.handleChangeUsername}  placeholder=\"Enter Your Username\"/> \r\n                        </div>\r\n                        <div className=\"InvalidInput\">\r\n                           <span>{this.state.usernameError}</span>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                        <div className=\"UserInfo\">\r\n                            <span>Password: </span>\r\n                            <TextBox type=\"password\" value={this.state.password} \r\n                             onChange={this.handleChangePassword} placeholder=\"Enter Your Password\"/> \r\n                        </div>\r\n                        <div className=\"InvalidInput\">\r\n                           <span>{this.state.passwordError}</span>\r\n                        </div>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"UserInfo\">\r\n                        <UCPButton className=\"smallbutton\" buttonText=\"Submit\"\r\n                            type=\"submit\"\r\n                            onClick={this.handleSubmit}\r\n                        />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n            );\r\n        }\r\n    }\r\n\r\n   ","import React from 'react'\r\nimport Select from 'react-select'\r\nimport './DropdownMenu.css';\r\nimport {isMobile} from 'react-device-detect';\r\nconst className = isMobile ? \"MobileDropdown\" : \"Dropdown\";\r\nconst DropdownMenu = ({options,placeholder,styles, ...props}) => (\r\n  \r\n  <Select className={className} options={options} placeholder={placeholder}/>\r\n)\r\n\r\nexport default DropdownMenu;\r\n\r\nDropdownMenu.defaultProps = {\r\n  \r\n    options:[\r\n      { value: 'computing', label: 'BSc (Hons) Computing and Information Systems' },\r\n      { value: 'criminoloy', label: 'BA (Hons) Crimonology'},\r\n      { value: 'digitalArts', label: 'FDA Digital Arts'}\r\n    ]\r\n};","import {Alert , Button} from 'react-bootstrap';\r\nimport {useState} from 'react';\r\nimport   './AlertDismissible.css';\r\nfunction AlertDismissible() {\r\n    const [show, setShow] = useState(true);\r\n  \r\n    if (show) {\r\n      return (\r\n        <Alert className=\"Alert\" onClose={() => setShow(false)} dismissible>\r\n          <Alert.Heading>Please request grades for the folowing GCSE / Level qualifiactions:</Alert.Heading>\r\n        </Alert>\r\n      );\r\n    }\r\n    return show? <Button onClick={() => setShow(true)}>Show Alert</Button>: <span></span>;\r\n  }\r\n\r\n  export default AlertDismissible;","import React from 'react'\r\nimport './RadioButton.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst RadioButton = ({name, options, heading, subtitle, oc,value, onChange,checked, ...props}) => {\r\n\r\n    //Iterate through options array and create an input + label for each\r\n    \r\n    var items = options.map((item) =>\r\n        <div className=\"radio-group\">\r\n            <input name={name} type=\"radio\" id={item.id}  checked={value === item.value} value={item.value} onChange={onChange} onClick={oc ? (e) => oc(item.value) : ''}/>\r\n            <label htmlFor={item.id}>{item.label}</label>\r\n        </div>\r\n    );\r\n\r\n    //Return div with heading, subtitle and then the items variable which is created in the loop above\r\n\r\n    return(\r\n        <div className=\"radio-buttons\">\r\n            <h4>{heading}</h4>\r\n            <p>{subtitle}</p>\r\n            {items}\r\n        </div>\r\n    );\r\n}\r\n\r\n//Prop Types:\r\n//Note that name and options are required, heading and subtitle are not\r\n//You must pass an array of JSON objects to instantiate an instance of radio button\r\n\r\nRadioButton.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    options: PropTypes.array.isRequired,\r\n    heading: PropTypes.string,\r\n    subtitle: PropTypes.string,\r\n    oc: PropTypes.func,\r\n    value: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired\r\n}\r\n\r\n//Without providing a heading or subtitle, this values default to null\r\n\r\nRadioButton.defaultProps = {\r\n    heading: null,\r\n    subtitle: null,\r\n    oc: null\r\n}\r\n\r\n//Export\r\n\r\nexport default RadioButton;\r\n\r\n/* \r\n\r\nEXAMPLE USE:\r\n\r\nvar criminalOptions = [\r\n        {label: \"Yes\", id: \"crimeYes\", value: \"yes\"},\r\n        {label: \"No\", id: \"crimeNo\", value: \"no\"}\r\n    ]\r\n\r\n<RadioButton heading=\"Convictions\" options={criminalOptions} name=\"criminal\" subtitle=\"Do you have any unspent criminal convictions?\" />\r\n\r\n*/","import React from 'react';\r\nimport './L3Component.css'\r\nimport PropTypes from 'prop-types';\r\nimport TextBox from '../TextBox/TextBox'\r\nimport {isMobile} from 'react-device-detect';\r\nconst L3Component = ({ name, id,key, onChange,placeholder,value,clearInput, ...props }) => {\r\n    const className1 = isMobile ? \"mobilel3component\" : \"l3component\";\r\n    return (\r\n        <div className={className1}>\r\n            <p>Qualification : {\"#\"+id} </p>\r\n            <p>(E.g. A Level, BTEC, Access)</p>\r\n            <TextBox\r\n            onChange = {onChange}    \r\n            id={\"qualification\" +id}\r\n            key = {\"2000\" + id}\r\n                placeholder={\"Enter qualification #\"+id} \r\n                value ={value} \r\n                clearInput = {clearInput}\r\n                />\r\n            <p>Subject: (E.g. Bussiness Studies)</p>\r\n            <TextBox\r\n                id={\"subject\" +id}\r\n                key = {\"3000\" + id}\r\n                placeholder={\"Enter subject #\" + id }\r\n                value ={value} \r\n                clearInput = {clearInput}\r\n                />\r\n            <p>Grade Achieved</p>\r\n            <TextBox\r\n                id={\"grade\"+id}\r\n                key = {\"4000\" + id}\r\n                placeholder={ \"Enter grade #\"+id}\r\n                value ={value} \r\n                clearInput = {clearInput} />\r\n            <p>Year Achieved</p>\r\n            <TextBox\r\n                id={\"year\"+id}\r\n                key = {\"5000\" + id}\r\n                type=\"date\" \r\n                value ={value} \r\n                clearInput = {clearInput}\r\n                />\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nTextBox.propTypes = {\r\n    backgroundColor: PropTypes.string,\r\n    /** What background colour to use */\r\n    title: PropTypes.string,\r\n    /** Input contents */\r\n    size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n    /** How large should the input be? */\r\n    maxLength: PropTypes.number,\r\n    //Maximum input length\r\n    minLength: PropTypes.number,\r\n    //Minimum input length\r\n    placeholder: PropTypes.string,\r\n    type: PropTypes.oneOf(['text', 'password', 'email', 'tel', 'number', 'date'])\r\n};\r\n\r\nTextBox.defaultProps = {\r\n    backgroundColor: null,\r\n    size: 'small',\r\n    maxLength: 30,\r\n    minLength: 0,\r\n    placeholder: '',\r\n    type: \"text\"\r\n};\r\n\r\n/* Example Use\r\n\r\n<TextBox \r\n    title=\"First Name\" \r\n    placeholder=\"Enter your firstname\" \r\n    minLength=\"5\" \r\n    maxLength=\"30\" \r\n    id=\"input1\" \r\n    type=\"text\" \r\n/>\r\n\r\n*/\r\n\r\nexport default L3Component;\r\n","import React, { useState } from \"react\";\r\nimport \"./LevelThreeQualifications.css\";\r\nimport RadioButton from '../RadioButton/RadioButton';\r\nimport L3Component from '../L3Component/L3Component';\r\nimport { isMobile } from 'react-device-detect';\r\nvar l3QualificationsOptions = [\r\n  { label: \"Yes\", id: \"qualificationYes\", value: \"yes\" },\r\n  { label: \"No\", id: \"qualificationNo\", value: \"no\" },\r\n];\r\nconst LevelThreeQualifications = () => {\r\n  const className2 = isMobile ? \"l3-mobile-form-container\" : \"l3-form-container\";\r\n  const [value, setValue] = useState(\"\");\r\n  const [emptyInput, setClearInput] = useState(false);\r\n  const [counter, setCounter] = useState(1);\r\n  const handleChange = event => {\r\n    console.log(event.target.value);\r\n    if (event.target.value === 'no') {\r\n      setCounter(6);\r\n      setValue(event.target.value);\r\n      \r\n    }\r\n    else {\r\n      setClearInput(true);\r\n      setCounter(counter + 1);\r\n    }\r\n  }\r\n  const className1 = isMobile ? \"l3-mobile-form-right\" : \"l3-form-right\";\r\n  return (\r\n    \r\n    <div className={className2}>\r\n      <div className=\"form-background\">\r\n        <h3 className=\"form-title\">Level 3 Qualifications</h3>\r\n        {counter < 6 ?\r\n          <div className={className1}>\r\n            <L3Component id={counter} clearInput= {emptyInput}  />\r\n              <p>Other L3 Qualifications</p>\r\n              <RadioButton\r\n                options={l3QualificationsOptions}\r\n                name=\"l3qualifications\"\r\n                value={value}\r\n                onChange={handleChange}\r\n              />\r\n          </div>\r\n          : <div>Next Page </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n};\r\n\r\nexport default LevelThreeQualifications;\r\n","export default __webpack_public_path__ + \"static/media/UCPLogo.02274764.png\";","import React from 'react';\r\nimport UCPLogo  from '../images/UCPLogo.png';\r\nimport './Headers.css';\r\nimport {isMobile} from 'react-device-detect';\r\nexport default class Headers extends React.Component{\r\n    constructor(){\r\n        super();\r\n    }\r\n    render(){\r\n        const className = isMobile ? \"MobileUCPLogoBlue\" : \"UCPLogoBlue\";\r\n        return (\r\n            <header>   \r\n                    <img data-testid=\"ucpLogoHeader\" src={UCPLogo} className={className} alt=\"UCP official logo\" />  \r\n            </header>\r\n        )\r\n    }\r\n};\r\n\r\n\r\n\r\n","import React from 'react';\nimport Login from './components/Login/Login';\nimport LevelTwoQualifications from './components/LevelTwoQualifications/LevelTwoQualifications'\nimport LevelThreeQualifications from './components/LevelThreeQualifications/LevelThreeQualifications'\n\nimport Headers from './components/Header/Headers'\nimport { Container } from 'react-bootstrap';\nfunction App() {\n  return (\n    <Container>\n      <Headers/>\n      <LevelThreeQualifications/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}